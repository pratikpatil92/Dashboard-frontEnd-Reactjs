[{"D:\\Project\\Dashboard_djangoand react\\frontend\\src\\index.js":"1","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\reportWebVitals.js":"2","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\App.js":"3","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\script\\Registration.js":"4","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\Redux\\auth\\AuthAction.js":"5","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\store.js":"6","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\rootRuducer.js":"7","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\Redux\\auth\\AuthReducer.js":"8","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\script\\Login.js":"9","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\utilities\\setAuthToken.js":"10","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\script\\Dashboard\\Dashboard.js":"11","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\script\\PageNotFound.js":"12","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\script\\Dashboard\\Header.js":"13","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\reusable\\PublicRoute.js":"14","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\reusable\\PrivateRoute.js":"15","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\script\\Dashboard\\Category\\AddCategory.js":"16","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\Redux\\category\\CategoryAction.js":"17","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\Redux\\category\\CategoryReducer.js":"18","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\script\\Dashboard\\Category\\ViewCategory.js":"19","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\script\\Dashboard\\Category\\EditCategory.js":"20","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\script\\Dashboard\\Post\\AddPost.js":"21","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\Redux\\post\\PostReducer.js":"22","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\Redux\\post\\PostAction.js":"23"},{"size":547,"mtime":1607689932639,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":2149,"mtime":1608309593899,"results":"27","hashOfConfig":"25"},{"size":5931,"mtime":1607756999962,"results":"28","hashOfConfig":"25"},{"size":2476,"mtime":1608275212809,"results":"29","hashOfConfig":"25"},{"size":444,"mtime":1607692500906,"results":"30","hashOfConfig":"25"},{"size":328,"mtime":1608651357538,"results":"31","hashOfConfig":"25"},{"size":942,"mtime":1608225127134,"results":"32","hashOfConfig":"25"},{"size":4038,"mtime":1607758847015,"results":"33","hashOfConfig":"25"},{"size":253,"mtime":1608225016285,"results":"34","hashOfConfig":"25"},{"size":1658,"mtime":1608309642638,"results":"35","hashOfConfig":"25"},{"size":280,"mtime":1607842625717,"results":"36","hashOfConfig":"25"},{"size":2029,"mtime":1608649037108,"results":"37","hashOfConfig":"25"},{"size":636,"mtime":1607843651729,"results":"38","hashOfConfig":"25"},{"size":629,"mtime":1607843634896,"results":"39","hashOfConfig":"25"},{"size":3005,"mtime":1607880273744,"results":"40","hashOfConfig":"25"},{"size":2831,"mtime":1608285172802,"results":"41","hashOfConfig":"25"},{"size":1340,"mtime":1608648976715,"results":"42","hashOfConfig":"25"},{"size":4060,"mtime":1608296531891,"results":"43","hashOfConfig":"25"},{"size":3392,"mtime":1608285250750,"results":"44","hashOfConfig":"25"},{"size":5511,"mtime":1608652894434,"results":"45","hashOfConfig":"25"},{"size":605,"mtime":1608651329738,"results":"46","hashOfConfig":"25"},{"size":946,"mtime":1608651093182,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"wufc4t",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Project\\Dashboard_djangoand react\\frontend\\src\\index.js",[],["104","105"],"D:\\Project\\Dashboard_djangoand react\\frontend\\src\\reportWebVitals.js",[],"D:\\Project\\Dashboard_djangoand react\\frontend\\src\\App.js",["106","107","108","109"],"import logo from './logo.svg';\nimport './App.css';\nimport store from './store';\nimport {Provider} from 'react-redux';\nimport Registration from './Component/script/Registration';\nimport Login from './Component/script/Login';\nimport Dashborad from './Component/script/Dashboard/Dashboard';\nimport PageNotFound from './Component/script/PageNotFound'\nimport setAuthToken from './Component/utilities/setAuthToken';\nimport {onLoginSuccess} from './Component/Redux/auth/AuthAction';\nimport Header from './Component/script/Dashboard/Header';\nimport PrivateRoute from './Component/reusable/PrivateRoute';\nimport PublicRoute from './Component/reusable/PublicRoute';\nimport AddCategory from './Component/script/Dashboard/Category/AddCategory';\nimport ViewCategory from './Component/script/Dashboard/Category/ViewCategory';\nimport EditCategory from './Component/script/Dashboard/Category/EditCategory';\nimport AddPost from './Component/script/Dashboard/Post/AddPost'\n\n\nimport {BrowserRouter as Router, Route, Switch, Redirect, withRouter} from 'react-router-dom';\n\nfunction App() {\n  const token=localStorage.getItem(\"user\");\n  if(token){\n    setAuthToken(token);\n    store.dispatch(onLoginSuccess());\n  }\n\n  const Main = withRouter(({location})=>{\n    return(\n      <div>\n      {location.pathname!=\"/\" && location.pathname!=\"/register\" && <Header/>}\n      <Switch>\n      <PublicRoute exact path=\"/\" component={Login}/>\n      <PublicRoute exact path=\"/register\" component={Registration}/>\n      <PrivateRoute exact path=\"/dashboard\" component={Dashborad}/>\n      <PrivateRoute exact path=\"/add-category\" component={AddCategory}/>\n      <PrivateRoute exact path=\"/view-category\" component={ViewCategory}/>\n      <PrivateRoute exact path=\"/edit-category/:id\" component={EditCategory}/>\n      <PrivateRoute exact path=\"/add-post\" component={AddPost}/>\n      <PublicRoute exact path=\"/404\" component={PageNotFound}/>\n      <Redirect to=\"/404\"/>\n      </Switch>\n      </div>\n    )\n  })\n\n\n  return (\n    <div>\n      <Provider store={store}>\n      <Router>\n        <Main></Main>\n      </Router>  \n      \n      </Provider>\n      \n    </div>\n  );\n}\n\nexport default App;\n","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\script\\Registration.js",["110","111","112","113","114"],"import React, { Component } from 'react'\r\nimport {onRegister} from './../Redux/auth/AuthAction';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, Link} from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faUser} from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Registration extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username:\"\",\r\n            first_name:\"\",\r\n            last_name:\"\",\r\n            email:\"\",\r\n            password:\"\",\r\n            error:\"\",\r\n\r\n        }\r\n    }\r\n\r\n    onHandleChange = (e)=>{\r\n        this.setState({[e.target.name]:e.target.value});\r\n        console.log(this.state)\r\n    }\r\n\r\n    onSubmit = ()=>{\r\n        // console.log(this.state)\r\n        \r\n        const {username,first_name,last_name,email,password}=this.state;\r\n        if(username==\"\"){\r\n            this.setState({error:\"this field can not be empty\"})    \r\n        }\r\n        else if(first_name==\"\"){\r\n            this.setState({error:\"this field can not be empty\"})\r\n        }\r\n        else if(last_name==\"\"){\r\n            this.setState({error:\"this field can not be empty\"})\r\n        }\r\n        else if(email==\"\"){\r\n            this.setState({error:\"this field can not be empty\"})\r\n        }\r\n        else if(password==\"\"){\r\n            this.setState({error:\"this field can not be empty\"})\r\n        }\r\n        else{\r\n            const user = {username,first_name,last_name,email,password};\r\n            this.props.onRegister(user,this.props.history);\r\n            this.setState({username:\"\",first_name:\"\",last_name:\"\",email:\"\",password:\"\",error:\"\"})\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        const {username,first_name,last_name,email,password}=this.state;\r\n        const {error_msg}=this.props.auth;\r\n        return (\r\n            <div>\r\n                <div className=\"py-2 bg-primary text-white\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                        <h1>\r\n                        <FontAwesomeIcon icon={faUser}></FontAwesomeIcon> Dashborad</h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"py-4 mb-4 bg-light\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 mx-auto\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <h4>Account Registration</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                            {error_msg?<p className=\"text-danger\">{error_msg}</p>:\"\"}\r\n                                <div className=\"form-group\">\r\n                                    <label>Username*</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"username\" value={username} onChange={this.onHandleChange}></input>\r\n                                    <span className=\"text-danger\">{this.state.error}</span>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group\">\r\n                                    <label>First Name*</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"first_name\" value={first_name} onChange={this.onHandleChange}></input>\r\n                                    <span className=\"text-danger\">{this.state.error}</span>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Last Name*</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"last_name\" value={last_name} onChange={this.onHandleChange}></input>\r\n                                    <span className=\"text-danger\">{this.state.error}</span>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group\">\r\n                                    <label>Email*</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"email\" value={email} onChange={this.onHandleChange}></input>\r\n                                    <span className=\"text-danger\">{this.state.error}</span>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Password*</label>\r\n                                    <input type=\"password\" className=\"form-control\" name=\"password\" value={password} onChange={this.onHandleChange}></input>\r\n                                    {this.state.error?<span className=\"text-danger\">{this.state.error}</span>:<span className=\"text-muted\">Must be 8-20 characters long</span>}\r\n                                    \r\n                                </div>\r\n                                <div className=\"text-center\">\r\n                                    <button className=\"btn btn-primary btn-block\" onClick={this.onSubmit}>Register</button>\r\n                                    <p>Already Registered <Link to=\"/\">Click</Link> To Login</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    auth:state.auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, {onRegister})(withRouter(Registration));\r\n","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\Redux\\auth\\AuthAction.js",["115","116","117"],"import axios from 'axios';\r\nimport jwt_decode from 'jwt-decode';\r\nimport setAuthToken from './../../utilities/setAuthToken'\r\n\r\nexport const onRegister = (user,history)=>{\r\n    return(dispatch)=>{\r\n        axios.post(\"http://127.0.0.1:8000/api/register/\", user)\r\n        .then(\r\n            res=>{\r\n                console.log(res)\r\n                if (res.status==200){\r\n                    console.log(res.data.message)\r\n                    dispatch(onRegisterSuccess(res.data.message))\r\n                    history.push(\"/\")\r\n                }else{\r\n                    console.log(\"error \",res)\r\n                    dispatch(onRegisterFailure(res.data.message))\r\n                }\r\n            }\r\n        )\r\n        .catch(err=>{\r\n            const er = err.response.data\r\n            const a = []\r\n            for (const [key, value] of Object.entries(er)) {\r\n                 a.push(`${key} :${value} `);\r\n              }\r\n            console.log(a)  \r\n            // console.log(Object.keys(er)+\" is wrong\")\r\n            dispatch(onRegisterFailure(a))\r\n            \r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const onLogin=(user, history)=>{\r\n    return (dispatch)=>{\r\n        axios.post(\"http://127.0.0.1:8000/api/auth/\",user)\r\n        .then((res)=>{\r\n           console.log(res);\r\n            if(res.status==200){\r\n\r\n                const {token}=res.data;\r\n                console.log(token);\r\n                // const decoded=jwt_decode(access_token);\r\n                // console.log(\"decoded\",decoded)\r\n                localStorage.setItem(\"user\", token);\r\n                setAuthToken(token);\r\n                \r\n                dispatch(onLoginSuccess());\r\n                history.push('/dashboard');\r\n            }else{\r\n                console.log(\"er1\",res.data.msg)\r\n                dispatch(onLoginFailure(res.data.msg));\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"er2\",err);\r\n            // dispatch(onLoginFailure(err));\r\n        })\r\n    }\r\n}\r\n\r\nexport const onRegisterSuccess=(msg)=>{\r\n    return {\r\n        type:\"ON_REGISTER_SUCCESS\",\r\n        payload:msg\r\n    }\r\n}\r\nexport const onRegisterFailure=(msg)=>{\r\n    return {\r\n        type:\"ON_REGISTER_FAILURE\",\r\n        payload:msg\r\n    }\r\n}\r\n\r\nexport const onLoginSuccess=()=>{\r\n    return {\r\n        type:\"ON_LOGIN_SUCCESS\",\r\n        // payload:user,\r\n    }\r\n\r\n}\r\n\r\nexport const onLoginFailure=(msg)=>{\r\n    return {\r\n        type:\"ON_LOGIN_FAILURE\",\r\n        payload:msg,\r\n    }\r\n}","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\store.js",[],"D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\rootRuducer.js",[],"D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\Redux\\auth\\AuthReducer.js",[],"D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\script\\Login.js",["118","119"],"import React, { Component } from 'react';\r\nimport {onLogin} from './../Redux/auth/AuthAction';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, Link} from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faUser} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username:\"\",\r\n            password:\"\",\r\n            error:\"\",\r\n        }\r\n    }\r\n\r\n    onHandleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value});\r\n    }\r\n\r\n    onSubmit = ()=>{\r\n        // console.log(this.state)\r\n        \r\n        const {username,password}=this.state;\r\n        console.log(this.state)\r\n        if(username==\"\"){\r\n            this.setState({error:\"this field can not be empty\"})    \r\n        }\r\n        else if(password==\"\"){\r\n            this.setState({error:\"this field can not be empty\"})\r\n        }\r\n        else{\r\n            const user = {username,password};\r\n            this.props.onLogin(user,this.props.history);\r\n            this.setState({username:\"\",password:\"\",error:\"\"})\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        const {username,password}=this.state;\r\n        const {error_msg}=this.props.auth;\r\n        return (\r\n            <div>\r\n                <div className=\"py-2 bg-primary text-white\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                        <h1>\r\n                        <FontAwesomeIcon icon={faUser}></FontAwesomeIcon> Dashborad</h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"py-4 mb-4 bg-light\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 mx-auto\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">\r\n                                <h4>Account Login</h4>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                            {error_msg?<p className=\"text-danger\">{error_msg}</p>:\"\"}\r\n                                <div className=\"form-group\">\r\n                                    <label>Username*</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"username\" value={username} onChange={this.onHandleChange}></input>\r\n                                    <span className=\"text-danger\">{this.state.error}</span>\r\n                                </div>\r\n                                \r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Password*</label>\r\n                                    <input type=\"password\" className=\"form-control\" name=\"password\" value={password} onChange={this.onHandleChange}></input>\r\n                                    <span className=\"text-danger\">{this.state.error}</span>\r\n                                    \r\n                                </div>\r\n                                <div className=\"text-center\">\r\n                                    <button className=\"btn btn-primary btn-block\" onClick={this.onSubmit}>Login</button>\r\n                                    <p>Not Registered <Link to=\"/register\">Click</Link> To Register</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n    auth:state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps,{onLogin})(withRouter(Login))\r\n","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\utilities\\setAuthToken.js",[],"D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\script\\Dashboard\\Dashboard.js",["120"],"import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faCog, faPlus} from '@fortawesome/free-solid-svg-icons';\r\nimport {Link, withRouter} from 'react-router-dom';\r\n\r\n\r\nexport default class Dashboard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"py-2 bg-primary text-white\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                        <h1>\r\n                        <FontAwesomeIcon icon={faCog}></FontAwesomeIcon> Dashborad</h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                </div>\r\n                <div className=\"py-4 mb-4 bg-light\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <Link className=\"btn btn-primary btn-block\" to=\"/add-category\"><FontAwesomeIcon icon={faPlus} ></FontAwesomeIcon>Add Category</Link>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <Link className=\"btn btn-success btn-block\" to=\"/add-post\"><FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>Add Post</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\script\\PageNotFound.js",[],"D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\script\\Dashboard\\Header.js",["121"],"D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\reusable\\PublicRoute.js",[],"D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\reusable\\PrivateRoute.js",[],"D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\script\\Dashboard\\Category\\AddCategory.js",["122","123"],"import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faCog, faPlus} from '@fortawesome/free-solid-svg-icons';\r\nimport {addCategory} from './../../../Redux/category/CategoryAction';\r\nimport {withRouter, Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass AddCategory extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            categoryName:\"\"\r\n        }\r\n    }\r\n    onHandleChange = (e)=>{\r\n        this.setState(({[e.target.name]:e.target.value}));\r\n    }\r\n\r\n    onSubmit = ()=>{\r\n        const obj = {\r\n            categoryName:this.state.categoryName,\r\n        }\r\n        this.props.addCategory(obj,this.props.history)\r\n        this.setState({categoryName:\"\"})\r\n    }\r\n    render() {\r\n        const {categoryName} = this.state;\r\n        const {success_msg,error_msg}=this.props.categories;\r\n\r\n        return (\r\n\r\n            <div>\r\n                <div className=\"py-2 bg-primary text-white\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                            <h1>\r\n                            <FontAwesomeIcon icon={faCog}></FontAwesomeIcon> Dashborad</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 mx-auto\">\r\n                            <div className=\"card m-2\">\r\n                                <div className=\"card-header\">\r\n                                    <h4>Add Category</h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    {success_msg?<h8 className=\"text-success\">{success_msg}</h8>:null}\r\n                                    {error_msg?<h8 className=\"text-danger\">{error_msg}</h8>:null}\r\n                                    <div className=\"form-group\">\r\n                                        <label>Category Name</label>\r\n                                        <input className=\"form-control\" type=\"text\" name=\"categoryName\" value={categoryName} onChange={this.onHandleChange}></input>\r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                        <button className=\"btn btn-primary btn-block\" onClick={this.onSubmit}>Add</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n    categories:state.categories\r\n})\r\n\r\nexport default connect (mapStateToProps, {addCategory})(withRouter(AddCategory));\r\n","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\Redux\\category\\CategoryAction.js",["124","125","126"],"import axios from 'axios';\r\n\r\nexport const addCategory=(data, history)=>{\r\n    return(dispatch)=>{\r\n        axios.post(\"http://127.0.0.1:8000/api/add_category/\",data)\r\n        .then(\r\n            res=>{\r\n                // console.log(res)\r\n                if(res.status==200){\r\n                    dispatch(onAddSuccess(res.data.message))\r\n                }else{\r\n                    dispatch(onAddFaluire(res.data.error))\r\n                }\r\n            }\r\n            \r\n        ).catch(err=>{\r\n            //  console.log(err)\r\n             dispatch(onAddFaluire(err.data.error))   \r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const onFetchCategory=()=>{\r\n    return(dispatch)=>{\r\n        axios.get(\"http://127.0.0.1:8000/api/get_category/\")\r\n        .then(res=>{\r\n            if(res.status==200){\r\n                // console.log(res)\r\n                dispatch(OnFetchSuccess(res.data));\r\n            \r\n\r\n            }else{    \r\n                dispatch(OnFetchFailure(res.data.msg));            }\r\n        }).catch(err=>{\r\n            // console.log(err)\r\n            dispatch(OnFetchFailure(err))\r\n        })\r\n    }\r\n}\r\n\r\nexport const getSingleCategory=(id)=>{\r\n    return (dispatch)=>{\r\n        return axios.get(\"http://127.0.0.1:8000/api/edit_category/\"+id)\r\n        .then(res=>{\r\n            console.log(\"actionsingle\",res);\r\n            return res.data.data;\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n            return false;\r\n        })\r\n    }\r\n}\r\n\r\nexport const onUpdateCategory=(id,data,history)=>{\r\n    //console.log(data);\r\n    return (dispatch)=>{\r\n        axios.put(\"http://127.0.0.1:8000/api/edit_category/\"+id,data)\r\n        .then(res=>{\r\n            //console.log(res);\r\n            if(res.status==200){\r\n            dispatch(onUpdateSuccess(res.data.message));\r\n            history.push(\"/view-category\");\r\n            }else{\r\n                dispatch(onUpdateFailure(res.data));\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            //console.log(err);\r\n            dispatch(onUpdateFailure(err.response));\r\n        })\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst onAddSuccess=(msg)=>{\r\n   return{\r\n        type:\"ADD_SUCCESS\",\r\n        payload:msg\r\n}\r\n}\r\nconst onAddFaluire=(msg)=>{\r\n    return{\r\n         type:\"ADD_FAILUIRE\",\r\n         payload:msg\r\n }\r\n }\r\n\r\n const OnFetchSuccess=(res)=>{\r\n     return{\r\n        type:\"ON_FETCH_SUCCESS\",\r\n        payload:res\r\n     }\r\n }\r\n\r\n const OnFetchFailure=(msg)=>{\r\n     return{\r\n         type:\"ON_FETCH_FAILURE\",\r\n         payload:msg\r\n     }\r\n }\r\n export const onFetching=()=>{\r\n    return{\r\n        type:\"ON_FETCHING\"\r\n    }\r\n}\r\n\r\nexport const onUpdateSuccess=(msg)=>{\r\n    return {\r\n        type:\"UPDATE_SUCCESS\",\r\n        payload:msg\r\n    }\r\n}\r\n\r\nexport const onUpdateFailure=(msg)=>{\r\n    return {\r\n        type:\"UPDATE_FAILURE\",\r\n        payload:msg\r\n    }\r\n}","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\Redux\\category\\CategoryReducer.js",[],"D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\script\\Dashboard\\Category\\ViewCategory.js",["127","128","129","130"],"import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faFolder, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons';\r\nimport {onFetchCategory} from './../../../Redux/category/CategoryAction';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, Link} from 'react-router-dom';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nclass ViewCategory extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    componentDidMount(){\r\n        this.props.onFetchCategory()\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        const category=this.props.categories;\r\n        if(category.data_state==\"NOT_INITIALIZED\" || category.data_state==\"FETCHING\"){\r\n            return (\r\n                <div>\r\n                     <Spinner color=\"primary\" />\r\n                </div>\r\n            )\r\n        }\r\n        else if(category.data_state==\"FETCHED_SUCCESS\"){\r\n            if(category.category.length>0){\r\n                return (\r\n                    <div>\r\n                        <div className=\"py-2 bg-success text-white\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                    <h1>\r\n                                    <FontAwesomeIcon icon={faFolder}></FontAwesomeIcon> Category</h1>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container mt-5\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header\">\r\n                                            <h4>All Category</h4>\r\n                                        </div>\r\n                                        <table className=\"table table-striped\">\r\n                                            <thead className=\"thead-dark\">\r\n                                                <tr>\r\n                                                    <th>S. Name</th>\r\n                                                    <th>Category Name</th>\r\n                                                    <th>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody className=\"p-2\">\r\n                                                {category.category.map((el,index)=>(\r\n                                                    <tr cl>\r\n                                                        <td>{index+1}</td>\r\n                                                        <td>{el.categoryName}</td>\r\n                                                        <Link className=\"btn btn-success btn-sm m-2\" to={`edit-category/${el.id}`}><FontAwesomeIcon icon={faEdit}></FontAwesomeIcon> Edit</Link>\r\n                                                        <button className=\"btn btn-danger btn-sm m-2\" ><FontAwesomeIcon icon={faTrash}></FontAwesomeIcon> Delete</button>\r\n                                                        \r\n                                                    </tr>\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}else{\r\n                    return(\r\n                    <h1>No Data Found , Please Add First</h1>\r\n                    )\r\n                }}\r\n\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    categories:state.categories\r\n})\r\n\r\nexport default connect(mapStateToProps,{onFetchCategory})(withRouter(ViewCategory));","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\script\\Dashboard\\Category\\EditCategory.js",["131"],"import React, { Component } from 'react'\r\nimport {onUpdateCategory, getSingleCategory} from './../../../Redux/category/CategoryAction';\r\nimport {withRouter} from 'react-router-dom'; \r\nimport {connect} from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport {faCog, faPlus} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass EditCategory extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={id:\"\",categoryName:\"\"};\r\n        //console.log(props);\r\n        const id=props.match.params.id;\r\n        this.getSingleCategoryAction(id);\r\n    }\r\n\r\n    getSingleCategoryAction=async(id)=>{\r\n        console.log(\"getsingle\",this.props)\r\n        const res=await this.props.getSingleCategory(id)\r\n        if(res){\r\n            this.setState({categoryName:res.categoryName, id:res.id})\r\n        }\r\n    }\r\n\r\n    onHandleChange=(e)=>{\r\n        this.setState({[e.target.name]:e.target.value});\r\n    }\r\n    onSubmit=()=>{\r\n        console.log(\"onsubmit\",this.state);\r\n        const obj={\r\n            categoryName:this.state.categoryName,\r\n            id:this.state.id,\r\n        }\r\n        const id = this.state.id;\r\n        this.props.onUpdateCategory(id, obj, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        const {categoryName} = this.state;\r\n        const {error_msg}=this.props.categories;\r\n\r\n        return (\r\n\r\n            <div>\r\n                <div className=\"py-2 bg-primary text-white\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                            <h1>\r\n                            <FontAwesomeIcon icon={faCog}></FontAwesomeIcon> Dashborad</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 mx-auto\">\r\n                            <div className=\"card m-2\">\r\n                                <div className=\"card-header\">\r\n                                    <h4>Edit Category</h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    {error_msg?<h8 className=\"text-danger\">{error_msg}</h8>:null}\r\n                                    <div className=\"form-group\">\r\n                                        <label>Category Name</label>\r\n                                        <input className=\"form-control\" type=\"text\" name=\"categoryName\" value={categoryName} onChange={this.onHandleChange}></input>\r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                        <button className=\"btn btn-primary btn-block\" onClick={this.onSubmit}>Add</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n    categories:state.categories\r\n})\r\n\r\nexport default connect (mapStateToProps, {onUpdateCategory, getSingleCategory})(withRouter(EditCategory));","D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\script\\Dashboard\\Post\\AddPost.js",["132","133","134","135","136"],"D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\Redux\\post\\PostReducer.js",[],"D:\\Project\\Dashboard_djangoand react\\frontend\\src\\Component\\Redux\\post\\PostAction.js",["137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":12},{"ruleId":"142","severity":1,"message":"146","line":20,"column":34,"nodeType":"144","messageId":"145","endLine":20,"endColumn":39},{"ruleId":"147","severity":1,"message":"148","line":32,"column":25,"nodeType":"149","messageId":"150","endLine":32,"endColumn":27},{"ruleId":"147","severity":1,"message":"148","line":32,"column":51,"nodeType":"149","messageId":"150","endLine":32,"endColumn":53},{"ruleId":"147","severity":1,"message":"151","line":31,"column":20,"nodeType":"149","messageId":"150","endLine":31,"endColumn":22},{"ruleId":"147","severity":1,"message":"151","line":34,"column":27,"nodeType":"149","messageId":"150","endLine":34,"endColumn":29},{"ruleId":"147","severity":1,"message":"151","line":37,"column":26,"nodeType":"149","messageId":"150","endLine":37,"endColumn":28},{"ruleId":"147","severity":1,"message":"151","line":40,"column":22,"nodeType":"149","messageId":"150","endLine":40,"endColumn":24},{"ruleId":"147","severity":1,"message":"151","line":43,"column":25,"nodeType":"149","messageId":"150","endLine":43,"endColumn":27},{"ruleId":"142","severity":1,"message":"152","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":18},{"ruleId":"147","severity":1,"message":"151","line":11,"column":31,"nodeType":"149","messageId":"150","endLine":11,"endColumn":33},{"ruleId":"147","severity":1,"message":"151","line":41,"column":26,"nodeType":"149","messageId":"150","endLine":41,"endColumn":28},{"ruleId":"147","severity":1,"message":"151","line":28,"column":20,"nodeType":"149","messageId":"150","endLine":28,"endColumn":22},{"ruleId":"147","severity":1,"message":"151","line":31,"column":25,"nodeType":"149","messageId":"150","endLine":31,"endColumn":27},{"ruleId":"142","severity":1,"message":"153","line":4,"column":15,"nodeType":"144","messageId":"145","endLine":4,"endColumn":25},{"ruleId":"154","severity":1,"message":"155","line":49,"column":21,"nodeType":"156","endLine":49,"endColumn":67},{"ruleId":"142","severity":1,"message":"157","line":3,"column":16,"nodeType":"144","messageId":"145","endLine":3,"endColumn":22},{"ruleId":"142","severity":1,"message":"158","line":5,"column":21,"nodeType":"144","messageId":"145","endLine":5,"endColumn":25},{"ruleId":"147","severity":1,"message":"151","line":9,"column":30,"nodeType":"149","messageId":"150","endLine":9,"endColumn":32},{"ruleId":"147","severity":1,"message":"151","line":28,"column":26,"nodeType":"149","messageId":"150","endLine":28,"endColumn":28},{"ruleId":"147","severity":1,"message":"151","line":62,"column":26,"nodeType":"149","messageId":"150","endLine":62,"endColumn":28},{"ruleId":"159","severity":1,"message":"160","line":10,"column":5,"nodeType":"161","messageId":"162","endLine":12,"endColumn":6},{"ruleId":"147","severity":1,"message":"151","line":21,"column":31,"nodeType":"149","messageId":"150","endLine":21,"endColumn":33},{"ruleId":"147","severity":1,"message":"151","line":21,"column":73,"nodeType":"149","messageId":"150","endLine":21,"endColumn":75},{"ruleId":"147","severity":1,"message":"151","line":28,"column":36,"nodeType":"149","messageId":"150","endLine":28,"endColumn":38},{"ruleId":"142","severity":1,"message":"157","line":7,"column":16,"nodeType":"144","messageId":"145","endLine":7,"endColumn":22},{"ruleId":"142","severity":1,"message":"163","line":44,"column":41,"nodeType":"144","messageId":"145","endLine":44,"endColumn":46},{"ruleId":"147","severity":1,"message":"151","line":47,"column":31,"nodeType":"149","messageId":"150","endLine":47,"endColumn":33},{"ruleId":"147","severity":1,"message":"151","line":47,"column":73,"nodeType":"149","messageId":"150","endLine":47,"endColumn":75},{"ruleId":"147","severity":1,"message":"151","line":54,"column":36,"nodeType":"149","messageId":"150","endLine":54,"endColumn":38},{"ruleId":"164","severity":1,"message":"165","line":100,"column":91,"nodeType":"166","endLine":100,"endColumn":102},{"ruleId":"147","severity":1,"message":"151","line":14,"column":26,"nodeType":"149","messageId":"150","endLine":14,"endColumn":28},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'jwt_decode' is defined but never used.","'withRouter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'faPlus' is defined but never used.","'Link' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'image' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]